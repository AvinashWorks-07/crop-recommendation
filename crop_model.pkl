import pandas as pd
from sklearn.preprocessing import LabelEncoder
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
import pickle

# Dataset load
df = pd.read_csv("Crop_recommendation.csv")
X = df.drop('label', axis=1)
y = df['label']

# Encode target
le = LabelEncoder()
y_encoded = le.fit_transform(y)

# Scale features (load already saved scaler)
scaler = pickle.load(open("scaler.pkl", "rb"))
X_scaled = scaler.transform(X)

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(
    X_scaled, y_encoded, test_size=0.2, random_state=42
)

# Train Random Forest
rf = RandomForestClassifier(n_estimators=100, random_state=42)
rf.fit(X_train, y_train)

# Save model
pickle.dump(rf, open("crop_model.pkl", "wb"))

# Optional: save label encoder to decode predictions
pickle.dump(le, open("label_encoder.pkl", "wb"))

print("âœ… crop_model.pkl and label_encoder.pkl created successfully")
